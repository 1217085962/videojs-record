/*! videojs-record v1.1.0
* https://github.com/collab-project/videojs-record
* Copyright (c) 2014-2016 - Licensed MIT */
!function(a,b){"function"==typeof define&&define.amd?define(["videojs"],b):"object"==typeof module&&module.exports?module.exports=b(require("video.js")):a.returnExports=b(a.videojs)}(this,function(a){a.LibVorbisEngine=a.extend(a.RecordBase,{setup:function(a,b,c){this.inputStream=a,this.mediaType=b,this.debug=c,this.options={workerURL:this.audioWorkerURL,moduleURL:this.audioModuleURL,encoderOptions:{channels:this.audioChannels,sampleRate:this.sampleRate,quality:.8}}},start:function(){this.chunks=[],this.audioContext=new AudioContext,this.audioSourceNode=this.audioContext.createMediaStreamSource(this.inputStream),this.scriptProcessorNode=this.audioContext.createScriptProcessor(this.bufferSize),libvorbis.OggVbrAsyncEncoder.create(this.options,this.onData.bind(this),this.onRecordingAvailable.bind(this)).then(this.onEngineCreated.bind(this))},stop:function(){this.audioSourceNode.disconnect(this.scriptProcessorNode),this.scriptProcessorNode.disconnect(this.audioContext.destination),this.encoder.finish(),this.audioContext.close(),this.audioContext=null},onEngineCreated:function(a){this.encoder=a,this.scriptProcessorNode.onaudioprocess=this.onAudioProcess.bind(this),this.audioSourceNode.connect(this.scriptProcessorNode),this.scriptProcessorNode.connect(this.audioContext.destination)},onAudioProcess:function(a){for(var b,c=[],d=a.inputBuffer,e=(d.length,0);e<this.audioChannels;e++)b=d.getChannelData(e),b=new Float32Array(b),c.push(b);this.encoder.encode(c)},onData:function(a){this.chunks.push(a)},onRecordingAvailable:function(){this.onStopRecording(new Blob(this.chunks,{type:"audio/ogg"}))}})});